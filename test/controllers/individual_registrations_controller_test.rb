require "test_helper"

class IndividualRegistrationsControllerTest < ActionDispatch::IntegrationTest
  setup do
    @individual_registration = individual_registrations(:one)
  end

  test "should get index" do
    get individual_registrations_url
    assert_response :success
  end

  test "should get new" do
    get new_individual_registration_url
    assert_response :success
  end

  test "should create individual_registration" do
    assert_difference('IndividualRegistration.count') do
      post individual_registrations_url, params: { individual_registration: { cboCodigo_2002: @individual_registration.cboCodigo_2002, cnes: @individual_registration.cnes, cnesDadoSerializado: @individual_registration.cnesDadoSerializado, coPovoComunidadeTradicional: @individual_registration.coPovoComunidadeTradicional, codIbge: @individual_registration.codIbge, codigoIbgeMunicipio: @individual_registration.codigoIbgeMunicipio, codigoIbgeMunicipioNascimento: @individual_registration.codigoIbgeMunicipioNascimento, cpfCidadao: @individual_registration.cpfCidadao, dataAtendimento: @individual_registration.dataAtendimento, dataNascimentoCidadao: @individual_registration.dataNascimentoCidadao, deficienciasCidadao: @individual_registration.deficienciasCidadao, desconheceNomeMae: @individual_registration.desconheceNomeMae, desconheceNomePai: @individual_registration.desconheceNomePai, descricaoCausaInternacaoEm12Meses: @individual_registration.descricaoCausaInternacaoEm12Meses, descricaoOutraCondicao1: @individual_registration.descricaoOutraCondicao1, descricaoOutraCondicao2: @individual_registration.descricaoOutraCondicao2, descricaoPlantasMedicinaisUsadas: @individual_registration.descricaoPlantasMedicinaisUsadas, doencaCardiaca: @individual_registration.doencaCardiaca, doencaRespiratoria: @individual_registration.doencaRespiratoria, doencaRins: @individual_registration.doencaRins, emailCidadao: @individual_registration.emailCidadao, etnia: @individual_registration.etnia, fichaAtualizada: @individual_registration.fichaAtualizada, grauInstrucaoCidadao: @individual_registration.grauInstrucaoCidadao, grauParentescoFamiliarFrequentado: @individual_registration.grauParentescoFamiliarFrequentado, higienePessoalSituacaoRua: @individual_registration.higienePessoalSituacaoRua, identidadeGeneroCidadao: @individual_registration.identidadeGeneroCidadao, ine: @individual_registration.ine, ineDadoSerializado: @individual_registration.ineDadoSerializado, maternidadeDeReferencia: @individual_registration.maternidadeDeReferencia, microArea: @individual_registration.microArea, nacionalidadeCidadao: @individual_registration.nacionalidadeCidadao, nomeCidadao: @individual_registration.nomeCidadao, nomeMaeCidadao: @individual_registration.nomeMaeCidadao, nomePaiCidadao: @individual_registration.nomePaiCidadao, numLote: @individual_registration.numLote, ocupacaoCodigoCbo2002: @individual_registration.ocupacaoCodigoCbo2002, orientacaoSexualCidadao: @individual_registration.orientacaoSexualCidadao, origemAlimentoSituacaoRua: @individual_registration.origemAlimentoSituacaoRua, outraInstituicaoQueAcompanha: @individual_registration.outraInstituicaoQueAcompanha, paisNascimento: @individual_registration.paisNascimento, profissionalCNS: @individual_registration.profissionalCNS, quantidadeAlimentacoesAoDiaSituacaoRua: @individual_registration.quantidadeAlimentacoesAoDiaSituacaoRua, racaCorCidadao: @individual_registration.racaCorCidadao, sexoCidadao: @individual_registration.sexoCidadao, situacaoMercadoTrabalhoCidadao: @individual_registration.situacaoMercadoTrabalhoCidadao, situacaoPeso: @individual_registration.situacaoPeso, stForaArea: @individual_registration.stForaArea, statusAcompanhadoPorOutraInstituicao: @individual_registration.statusAcompanhadoPorOutraInstituicao, statusDesejaInformarIdentidadeGenero: @individual_registration.statusDesejaInformarIdentidadeGenero, statusDesejaInformarOrientacaoSexual: @individual_registration.statusDesejaInformarOrientacaoSexual, statusDiagnosticoMental: @individual_registration.statusDiagnosticoMental, statusEhDependenteAlcool: @individual_registration.statusEhDependenteAlcool, statusEhDependenteOutrasDrogas: @individual_registration.statusEhDependenteOutrasDrogas, statusEhFumante: @individual_registration.statusEhFumante, statusEhGestante: @individual_registration.statusEhGestante, statusEhResponsavel: @individual_registration.statusEhResponsavel, statusEstaAcamado: @individual_registration.statusEstaAcamado, statusEstaDomiciliado: @individual_registration.statusEstaDomiciliado, statusFrequentaBenzedeira: @individual_registration.statusFrequentaBenzedeira, statusFrequentaEscola: @individual_registration.statusFrequentaEscola, statusMembroPovoComunidadeTradicional: @individual_registration.statusMembroPovoComunidadeTradicional, statusParticipaGrupoComunitario: @individual_registration.statusParticipaGrupoComunitario, statusPossuiPlanoSaudePrivado: @individual_registration.statusPossuiPlanoSaudePrivado, statusPossuiReferenciaFamiliar: @individual_registration.statusPossuiReferenciaFamiliar, statusRecebeBeneficio: @individual_registration.statusRecebeBeneficio, statusSituacaoRua: @individual_registration.statusSituacaoRua, statusTemAcessoHigienePessoalSituacaoRua: @individual_registration.statusTemAcessoHigienePessoalSituacaoRua, statusTemAlgumaDeficiencia: @individual_registration.statusTemAlgumaDeficiencia, statusTemDiabetes: @individual_registration.statusTemDiabetes, statusTemDoencaRespiratoria: @individual_registration.statusTemDoencaRespiratoria, statusTemHanseniase: @individual_registration.statusTemHanseniase, statusTemHipertensaoArterial: @individual_registration.statusTemHipertensaoArterial, statusTemTeveCancer: @individual_registration.statusTemTeveCancer, statusTemTeveDoencasRins: @individual_registration.statusTemTeveDoencasRins, statusTemTuberculose: @individual_registration.statusTemTuberculose, statusTermoRecusaCadastroIndividualAtencaoBasica: @individual_registration.statusTermoRecusaCadastroIndividualAtencaoBasica, statusTeveAvcDerrame: @individual_registration.statusTeveAvcDerrame, statusTeveDoencaCardiaca: @individual_registration.statusTeveDoencaCardiaca, statusTeveInfarto: @individual_registration.statusTeveInfarto, statusTeveInternadoEm12Meses: @individual_registration.statusTeveInternadoEm12Meses, statusUsaPlantaMedicinais: @individual_registration.statusUsaPlantaMedicinais, statusVisitaFamiliarFrequentemente: @individual_registration.statusVisitaFamiliarFrequentemente, telefoneCelular: @individual_registration.telefoneCelular, tempoSituacaoRua: @individual_registration.tempoSituacaoRua, tipoDadoSerializado: @individual_registration.tipoDadoSerializado, tpCdsOrigem: @individual_registration.tpCdsOrigem, uuid: @individual_registration.uuid, uuidDadoSerializado: @individual_registration.uuidDadoSerializado, uuidFichaOriginadora: @individual_registration.uuidFichaOriginadora } }
    end

    assert_redirected_to individual_registration_url(IndividualRegistration.last)
  end

  test "should show individual_registration" do
    get individual_registration_url(@individual_registration)
    assert_response :success
  end

  test "should get edit" do
    get edit_individual_registration_url(@individual_registration)
    assert_response :success
  end

  test "should update individual_registration" do
    patch individual_registration_url(@individual_registration), params: { individual_registration: { cboCodigo_2002: @individual_registration.cboCodigo_2002, cnes: @individual_registration.cnes, cnesDadoSerializado: @individual_registration.cnesDadoSerializado, coPovoComunidadeTradicional: @individual_registration.coPovoComunidadeTradicional, codIbge: @individual_registration.codIbge, codigoIbgeMunicipio: @individual_registration.codigoIbgeMunicipio, codigoIbgeMunicipioNascimento: @individual_registration.codigoIbgeMunicipioNascimento, cpfCidadao: @individual_registration.cpfCidadao, dataAtendimento: @individual_registration.dataAtendimento, dataNascimentoCidadao: @individual_registration.dataNascimentoCidadao, deficienciasCidadao: @individual_registration.deficienciasCidadao, desconheceNomeMae: @individual_registration.desconheceNomeMae, desconheceNomePai: @individual_registration.desconheceNomePai, descricaoCausaInternacaoEm12Meses: @individual_registration.descricaoCausaInternacaoEm12Meses, descricaoOutraCondicao1: @individual_registration.descricaoOutraCondicao1, descricaoOutraCondicao2: @individual_registration.descricaoOutraCondicao2, descricaoPlantasMedicinaisUsadas: @individual_registration.descricaoPlantasMedicinaisUsadas, doencaCardiaca: @individual_registration.doencaCardiaca, doencaRespiratoria: @individual_registration.doencaRespiratoria, doencaRins: @individual_registration.doencaRins, emailCidadao: @individual_registration.emailCidadao, etnia: @individual_registration.etnia, fichaAtualizada: @individual_registration.fichaAtualizada, grauInstrucaoCidadao: @individual_registration.grauInstrucaoCidadao, grauParentescoFamiliarFrequentado: @individual_registration.grauParentescoFamiliarFrequentado, higienePessoalSituacaoRua: @individual_registration.higienePessoalSituacaoRua, identidadeGeneroCidadao: @individual_registration.identidadeGeneroCidadao, ine: @individual_registration.ine, ineDadoSerializado: @individual_registration.ineDadoSerializado, maternidadeDeReferencia: @individual_registration.maternidadeDeReferencia, microArea: @individual_registration.microArea, nacionalidadeCidadao: @individual_registration.nacionalidadeCidadao, nomeCidadao: @individual_registration.nomeCidadao, nomeMaeCidadao: @individual_registration.nomeMaeCidadao, nomePaiCidadao: @individual_registration.nomePaiCidadao, numLote: @individual_registration.numLote, ocupacaoCodigoCbo2002: @individual_registration.ocupacaoCodigoCbo2002, orientacaoSexualCidadao: @individual_registration.orientacaoSexualCidadao, origemAlimentoSituacaoRua: @individual_registration.origemAlimentoSituacaoRua, outraInstituicaoQueAcompanha: @individual_registration.outraInstituicaoQueAcompanha, paisNascimento: @individual_registration.paisNascimento, profissionalCNS: @individual_registration.profissionalCNS, quantidadeAlimentacoesAoDiaSituacaoRua: @individual_registration.quantidadeAlimentacoesAoDiaSituacaoRua, racaCorCidadao: @individual_registration.racaCorCidadao, sexoCidadao: @individual_registration.sexoCidadao, situacaoMercadoTrabalhoCidadao: @individual_registration.situacaoMercadoTrabalhoCidadao, situacaoPeso: @individual_registration.situacaoPeso, stForaArea: @individual_registration.stForaArea, statusAcompanhadoPorOutraInstituicao: @individual_registration.statusAcompanhadoPorOutraInstituicao, statusDesejaInformarIdentidadeGenero: @individual_registration.statusDesejaInformarIdentidadeGenero, statusDesejaInformarOrientacaoSexual: @individual_registration.statusDesejaInformarOrientacaoSexual, statusDiagnosticoMental: @individual_registration.statusDiagnosticoMental, statusEhDependenteAlcool: @individual_registration.statusEhDependenteAlcool, statusEhDependenteOutrasDrogas: @individual_registration.statusEhDependenteOutrasDrogas, statusEhFumante: @individual_registration.statusEhFumante, statusEhGestante: @individual_registration.statusEhGestante, statusEhResponsavel: @individual_registration.statusEhResponsavel, statusEstaAcamado: @individual_registration.statusEstaAcamado, statusEstaDomiciliado: @individual_registration.statusEstaDomiciliado, statusFrequentaBenzedeira: @individual_registration.statusFrequentaBenzedeira, statusFrequentaEscola: @individual_registration.statusFrequentaEscola, statusMembroPovoComunidadeTradicional: @individual_registration.statusMembroPovoComunidadeTradicional, statusParticipaGrupoComunitario: @individual_registration.statusParticipaGrupoComunitario, statusPossuiPlanoSaudePrivado: @individual_registration.statusPossuiPlanoSaudePrivado, statusPossuiReferenciaFamiliar: @individual_registration.statusPossuiReferenciaFamiliar, statusRecebeBeneficio: @individual_registration.statusRecebeBeneficio, statusSituacaoRua: @individual_registration.statusSituacaoRua, statusTemAcessoHigienePessoalSituacaoRua: @individual_registration.statusTemAcessoHigienePessoalSituacaoRua, statusTemAlgumaDeficiencia: @individual_registration.statusTemAlgumaDeficiencia, statusTemDiabetes: @individual_registration.statusTemDiabetes, statusTemDoencaRespiratoria: @individual_registration.statusTemDoencaRespiratoria, statusTemHanseniase: @individual_registration.statusTemHanseniase, statusTemHipertensaoArterial: @individual_registration.statusTemHipertensaoArterial, statusTemTeveCancer: @individual_registration.statusTemTeveCancer, statusTemTeveDoencasRins: @individual_registration.statusTemTeveDoencasRins, statusTemTuberculose: @individual_registration.statusTemTuberculose, statusTermoRecusaCadastroIndividualAtencaoBasica: @individual_registration.statusTermoRecusaCadastroIndividualAtencaoBasica, statusTeveAvcDerrame: @individual_registration.statusTeveAvcDerrame, statusTeveDoencaCardiaca: @individual_registration.statusTeveDoencaCardiaca, statusTeveInfarto: @individual_registration.statusTeveInfarto, statusTeveInternadoEm12Meses: @individual_registration.statusTeveInternadoEm12Meses, statusUsaPlantaMedicinais: @individual_registration.statusUsaPlantaMedicinais, statusVisitaFamiliarFrequentemente: @individual_registration.statusVisitaFamiliarFrequentemente, telefoneCelular: @individual_registration.telefoneCelular, tempoSituacaoRua: @individual_registration.tempoSituacaoRua, tipoDadoSerializado: @individual_registration.tipoDadoSerializado, tpCdsOrigem: @individual_registration.tpCdsOrigem, uuid: @individual_registration.uuid, uuidDadoSerializado: @individual_registration.uuidDadoSerializado, uuidFichaOriginadora: @individual_registration.uuidFichaOriginadora } }
    assert_redirected_to individual_registration_url(@individual_registration)
  end

  test "should destroy individual_registration" do
    assert_difference('IndividualRegistration.count', -1) do
      delete individual_registration_url(@individual_registration)
    end

    assert_redirected_to individual_registrations_url
  end
end
